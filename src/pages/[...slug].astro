---
import Layout from '../layouts/Layout.astro';
import fs from 'fs/promises';
import path from 'path';

const { slug } = Astro.params;
const pageSlug = Array.isArray(slug) ? slug.join('/') : slug || 'index';

const CONTENT_DIR = path.join(process.cwd(), 'src/content/pages');

// Simple markdown to HTML converter
function markdownToHtml(markdown) {
  return markdown
    .replace(/^---[\s\S]*?---\n/, '') // Remove frontmatter
    .replace(/^### (.*$)/gim, '<h3>$1</h3>')
    .replace(/^## (.*$)/gim, '<h2>$1</h2>')
    .replace(/^# (.*$)/gim, '<h1>$1</h1>')
    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
    .replace(/\*(.*?)\*/g, '<em>$1</em>')
    .replace(/^\- (.*$)/gim, '<li>$1</li>')
    .replace(/(<li>.*<\/li>)/s, '<ul>$1</ul>')
    .replace(/\n\n/g, '</p><p>')
    .replace(/^(.*)$/gm, function(match) {
      if (match.trim() && !match.startsWith('<')) {
        return '<p>' + match + '</p>';
      }
      return match;
    })
    .replace(/<p><\/p>/g, '')
    .replace(/<p>(<[^>]+>)/g, '$1')
    .replace(/(<\/[^>]+>)<\/p>/g, '$1');
}

// Load page content server-side
let pageContent = '';
let pageTitle = pageSlug;
let pageExists = false;

try {
  const filePath = path.join(CONTENT_DIR, `${pageSlug}.md`);
  const content = await fs.readFile(filePath, 'utf-8');
  
  // Extract frontmatter
  const frontmatterMatch = content.match(/^---\n([\s\S]*?)\n---\n/);
  let rawContent = content;
  
  if (frontmatterMatch) {
    const frontmatter = frontmatterMatch[1];
    const titleMatch = frontmatter.match(/^title:\s*(.+)$/m);
    if (titleMatch) {
      pageTitle = titleMatch[1].trim();
    }
    rawContent = content.replace(frontmatterMatch[0], '');
  } else {
    // Try to extract title from first heading
    const headingMatch = rawContent.match(/^#\s+(.+)$/m);
    if (headingMatch) {
      pageTitle = headingMatch[1].trim();
    }
  }
  
  pageContent = markdownToHtml(rawContent);
  pageExists = true;
} catch (error) {
  // Page doesn't exist
  pageContent = `
    <h1>Page Not Found</h1>
    <p>The page "${pageSlug}" doesn't exist.</p>
    <a href="/admin/new?slug=${pageSlug}" class="btn btn-primary">Create This Page</a>
  `;
  pageTitle = `Page Not Found - ${pageSlug}`;
}

// Return 404 status if page doesn't exist
if (!pageExists) {
  Astro.response.status = 404;
}
---

<Layout title={pageTitle} editSlug={pageSlug}>
  <div set:html={pageContent}></div>
</Layout>