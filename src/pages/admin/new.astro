---
import Layout from '../../layouts/Layout.astro';

const urlParams = new URL(Astro.request.url).searchParams;
const suggestedSlug = urlParams.get('slug') || '';
---

<Layout title="Create New Page" showEditButton={false}>
  <div class="cms-container">
    <div class="cms-header">
      <h1>Create New Page</h1>
      <a href="/admin" class="btn btn-secondary">‚Üê Back to Dashboard</a>
    </div>
    
    <form id="create-form" class="cms-card">
      <div class="form-group">
        <label for="title">Page Title</label>
        <input type="text" id="title" name="title" required />
      </div>
      
      <div class="form-group">
        <label for="slug">URL Slug</label>
        <input type="text" id="slug" name="slug" required value={suggestedSlug} />
        <small style="color: #666;">This will be the URL: /{suggestedSlug || 'your-slug'}</small>
      </div>
      
      <div class="form-group">
        <label for="content">Content (Markdown)</label>
        <textarea id="content" name="content" placeholder="# Your Page Title

Write your content here using Markdown...

## Subheading

- List item 1
- List item 2

**Bold text** and *italic text*"></textarea>
      </div>
      
      <div class="cms-actions">
        <button type="submit" class="btn btn-primary">Create Page</button>
        <a href="/admin" class="btn btn-secondary">Cancel</a>
      </div>
    </form>
  </div>
  
  <script>
    document.getElementById('create-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const data = {
        title: formData.get('title'),
        slug: formData.get('slug'),
        content: formData.get('content')
      };
      
      try {
        const response = await fetch('/api/pages', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        if (response.ok) {
          const result = await response.json();
          window.location.href = `/admin/edit/${result.slug}`;
        } else {
          const error = await response.json();
          alert(`Failed to create page: ${error.message}`);
        }
      } catch (error) {
        console.error('Failed to create page:', error);
        alert('Failed to create page');
      }
    });
    
    // Auto-generate slug from title
    document.getElementById('title').addEventListener('input', (e) => {
      const slugInput = document.getElementById('slug');
      if (!slugInput.value || slugInput.dataset.autoGenerated) {
        const slug = e.target.value
          .toLowerCase()
          .replace(/[^a-z0-9]+/g, '-')
          .replace(/^-+|-+$/g, '');
        slugInput.value = slug;
        slugInput.dataset.autoGenerated = 'true';
      }
    });
    
    document.getElementById('slug').addEventListener('input', (e) => {
      e.target.dataset.autoGenerated = '';
    });
  </script>
</Layout>
